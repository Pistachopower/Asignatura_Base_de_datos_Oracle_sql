SELECT * FROM JUGADORES;

INSERT INTO JUGADORES(CODJUGADOR,NOMBRE,FECNAC,DORSAL)
VALUES (1,'PEPILLO',TO_DATE('12/10/2001','DD/MM/YYYY'),1);




INSERT INTO JUGADORES(CODJUGADOR,NOMBRE,FECNAC,DORSAL)
VALUES ((SELECT NVL(MAX(CODJUGADOR),0)+ 1 FROM JUGADORES),'PEPILLO2',TO_DATE('12/10/2001','DD/MM/YYYY'),1);


/**** crear un secuencia***********/
DROP SEQUENCE SEQ_JUGADORES;

CREATE SEQUENCE SEQ_JUGADORES
INCREMENT BY 1
START WITH 1;

/**************
CREATE SEQUENCE schema_name.sequence_name
[INCREMENT BY interval]
[START WITH first_number]
[MAXVALUE max_value | NOMAXVALUE]
[MINVALUE min_value | NOMINVALUE]
[CYCLE | NOCYCLE]
[CACHE cache_size | NOCACHE]
[ORDER | NOORDER];
********/


CREATE SEQUENCE SEQ_EQUIPOS
INCREMENT BY 1
START WITH 1;


SELECT SEQ_JUGADORES.NEXTVAL FROM DUAL;

SELECT SEQ_JUGADORES.CURRVAL FROM DUAL;

DELETE FROM JUGADORES;

INSERT INTO JUGADORES(CODJUGADOR,NOMBRE,FECNAC,DORSAL)
VALUES (SEQ_JUGADORES.NEXTVAL,'PEPILLO2',TO_DATE('12/10/2001','DD/MM/YYYY'),1);


INSERT INTO EQUIPOS(CODEQUIPO, NOMBRE,FECHA_FUNDACION, NUM_SOCIOS,VALOR_MERCADO)
VALUES
(6, 'REAL BETIS BALOMPIE', TO_DATE('12/09/1907','DD/MM/YYYY'),50373,NULL);


INSERT INTO jugadores_equipos(CODTEMPORADA, CODJUGADOR, CODEQUIPO)
VALUES ('20/21',SEQ_JUGADORES.CURRVAL,6);


/************************* REPASO*********************/
SELECT AVG(EDAD),MAX(EDAD), MIN(EDAD),COUNT(*)
FROM alumnos
WHERE UPPER(CURSO) = '1DAW';

SELECT UPPER(CURSO),AVG(EDAD),MAX(EDAD), MIN(EDAD),COUNT(*)
FROM alumnos
GROUP BY UPPER(CURSO);

/*********************************************************/
/*** REGLA GENERAL PARA LAS QUERIES*******
1. EXISTE ALGUN PRECALCULO-- UTILIZO SUBCONSULTAS
2. ME ENCUENTRO EN LA SUBCONSULTA. EXISTE ALGUN PRECALCULO--VUELVO AL PUNTO UNO
3. DONDE ESTA LA INFORMACIÓN-- ESTO LO PONGO EN EL FROM
4. QUE INFORMACION QUIERO MOSTRAR.
5. EXISTE ALGUNA FUNCION DE AGREGACION-- SI ES ASI, TODO LO QUE ESTA FUERA DE LA FUNCION DE 
   AGREGACIÓN VA AL GROUP BY
6. EXISTE ALGUNA CONDICION SOBRE LAS COLUMNAS DE LAS TABLAS--ESTO VA AL WHERE   
7. EXISTE ALGUNA CONDICION SOBRE LAS FUNCIONES DE AGREGACION-- ESTO VA AL HAVING   
8. EXISTE ALGUNA ORDENACION-- ESTO VA EN EL ORDER BY.
*******/

SELECT UPPER(CURSO),AVG(EDAD),MAX(EDAD), MIN(EDAD),COUNT(*)
FROM alumnos
GROUP BY UPPER(CURSO);


SELECT * FROM ALUMNOS
WHERE NOMBRE LIKE '%I_';

SELECT * FROM ALUMNOS
WHERE SUBSTR(NOMBRE,2,1)='V';



--BY ALBERTO -- PERO CASI BIEN
SELECT NOMBRE FROM ALUMNOS WHERE UPPER(NOMBRE) LIKE '%S %' OR UPPER(NOMBRE) LIKE '%S';

SELECT * FROM ALUMNOS
WHERE UPPER(NOMBRE) LIKE '%S %' 
      OR (UPPER(NOMBRE) LIKE '%S' AND NOT UPPER(NOMBRE) LIKE '% %S');
      

--INSTR
SELECT NOMBRE, APELLIDOS, INSTR(NOMBRE,'A',10)
FROM ALUMNOS;
      
--SEPARAR APELLIDOS EN DOS      
SELECT NOMBRE, APELLIDOS, INSTR(APELLIDOS,' ',1), SUBSTR(APELLIDOS,1,INSTR(APELLIDOS,' ',1)),
       SUBSTR(APELLIDOS,INSTR(APELLIDOS,' ',1))
FROM ALUMNOS;


SELECT SUBSTR('ANTONIO',3) ,SUBSTR('ANTONIO',3,2),SUBSTR('ANTONIO',3,LENGTH('ANTONIO'))
FROM DUAL;
SELECT SUBSTR('ANTONIO',3) ,SUBSTR('ANTONIO',3,2),SUBSTR('ANTONIO',3,LENGTH('ANTONIO')),SUBSTR('ANTONIO',-2)
FROM DUAL;
